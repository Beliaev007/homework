# 1)Написать скрипт который в создаст список целых чисел.
list_1 = list(range(71))
print(list_1)
# 2)Написать скрипт который в создаст список целых чётных чисел.
list_2 = list(range(2,71,2))
print(list_2)



# Написать скрипт который в создаст список целых нечётных чисел.
# Написать скрипт который из списка целых чисел выведет чётные числа.
# Написать скрипт который из списка целых чисел выведет нечётные числа.
# Написать скрипт который из списка целых чисел выведет чётные числа которые делятся на 5 без остатка.
# Написать скрипт который из списка целых чисел выведет количество  чётных чисел которые делятся на 5 без остатка.
# Написать скрипт который в создаст список целых рандомных чисел.
# Написать функцию которая, получив на вход любой из выше созданных списков, разобьёт его списки по 5 элементов.
# Написать функцию которая, получив на вход список целых чисел, вернёт 2 списка, список чётных и список нечётных чисел.
# Написать скрипт который сгенерирует список под названием 5_stars из списков по 5 элементов целых чисел.
# Написать скрипт который выведет список из сумм каждого внутреннего списка из  5_stars
# Написать функцию которая на вход получает список 5_stars, а вернёт 2 списка. В одном списке внутренние списки из 5_stars сумма чисел которых >= 100, а другой сумма чисел которых < 100. Если какого-то списка не получится, то вместо него вернуть текст “No lists”
# Написать функцию которая получив на вход ваш возраст, выведет вам через какой срок вы сумеете отложить 10 000$, 20 000$, 30 000$, 50 000$, 100 000$ в кубышку.
# Написать функцию которая получив на вход стартовую ЗП Junior QA и количество лет стажа выведет в консоль прогресс роста ЗП по каждому году из введенного количества лет стажа. Внутри функция учитывает дорожную карту развития скилов QA и список, полезных для компании, активностей которые может делать QA. Free implementation of function body logic
#
#
#
# Написать скрипт который сгенерирует список имён пользователей. Список имён вывести в консоль.
# Написать скрипт который сгенерирует список имён файлов. К каждому имени  файла надо прикрепить номер итерации цикла как порядковый номер.
#  Написать скрипт который сгенерирует список списков. Каждый элемент списка это список в котором 0-й элемент - это имя пользователя, а 1-й - элемент это дата регистрации.
# Написать скрипт который сгенерирует список Employees списков . Каждый элемент списка - это список в котором:
# 0-й - элемент - это имя пользователя,
# 1-й - элемент - это логин,
# 2-й - элемент - это пароль,
# 3-й - элемент - это email (email тоже генерировать),
# 4-й - элемент - это дата регистрации
# Написать скрипт который сгенерирует список family списков. Каждый элемент списка - это список в котором:
# 0-й - элемент - это логин,
# 1-й - элемент - это имя,
# 2-й - элемент - семейный статус (True, False - генерировать рандомно),
# Написать скрипт который сгенерирует список gender списков. Каждый элемент списка - это список в котором:
# 0-й - элемент - это логин,
# 1-й - элемент - это имя,
# 2-й - элемент - гендер (1-м, 0-ж)
# Написать скрипт который сгенерирует список salary списков. Каждый элемент списка - это список в котором:
# 0-й - элемент - это логин,
# 1-й - элемент - это имя,
# 2-й - элемент - зарплата (генерироовать от 300$ до 5000$)
# Написать скрипт который создаст список мён работников из salary у которых ЗП от 1500$ до 3000$
# Написать скрипт который создаст список имён мужчин из gender.
# Написать скрипт который создаст список имён женщин из gender.
# Написать скрипт который создаст список имён неженатых мужчин из family.
# Написать скрипт который создаст список имён незамужних женщин из family.
# Написать скрипт который создаст список имён неженатых мужчин с ЗП больше или равной 1500$. Используйте Employees, family, gender, salary. Реализуйте как скрипт, без функций
# Реализуйте пункт 28 через через функции.
# Поешьте и выспитесь)
